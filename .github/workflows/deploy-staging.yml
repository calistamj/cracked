name: Deploy Staging

on:
  push:
    branches: [staging]

env:
  NODE_VERSION: 20.17.0
  EDGE_STORE_ACCESS_KEY: ${{ secrets.EDGE_STORE_ACCESS_KEY }}
  EDGE_STORE_SECRET_KEY: ${{ secrets.EDGE_STORE_SECRET_KEY }}

jobs:
  deploy_staging:
    runs-on: ubuntu-latest

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
        
      - name: Cache node_modules & .next
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .next
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Vercel Pull (Preview)
        run: vercel pull --yes --environment=preview --token $VERCEL_TOKEN

      - name: Vercel Build
        run: vercel build --token $VERCEL_TOKEN

      - name: Vercel Deploy
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }})
            echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: Set Vercel alias
        run: |
          vercel alias set ${{ steps.deploy.outputs.deployment_url }} ${{ secrets.STAGGING_URL }} --token ${{ secrets.VERCEL_TOKEN }}